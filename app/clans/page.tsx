"use client";\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useAuth } from '@/components/providers/AuthContext';\nimport { \n    Sword, \n    Users, \n    Trophy, \n    Search, \n    Filter, \n    Plus, \n    Star, \n    Crown, \n    Shield, \n    Target, \n    TrendingUp,\n    Calendar,\n    ExternalLink,\n    Gamepad2,\n    Award\n} from 'lucide-react';\n\ninterface Clan {\n    id: string;\n    name: string;\n    tag: string;\n    description: string;\n    banner: string;\n    logo: string;\n    game: string;\n    level: number;\n    xp: number;\n    maxMembers: number;\n    memberCount: number;\n    isActive: boolean;\n    isPublic: boolean;\n    isRecruiting: boolean;\n    createdAt: number;\n    updatedAt: number;\n    founder: {\n        id: string;\n        name: string;\n        avatar: string;\n    };\n    leaders: string[];\n    stats: {\n        totalMatches: number;\n        wins: number;\n        losses: number;\n        winRate: number;\n        totalTournaments: number;\n        tournamentsWon: number;\n        ranking: number;\n    };\n    requirements: {\n        minLevel: number;\n        minRank: string;\n        applicationRequired: boolean;\n        inviteOnly: boolean;\n    };\n    achievements: string[];\n    socialLinks: {\n        discord?: string;\n        steam?: string;\n        twitch?: string;\n        youtube?: string;\n    };\n}\n\ninterface ClansResponse {\n    clans: Clan[];\n    pagination: {\n        currentPage: number;\n        totalPages: number;\n        totalCount: number;\n        hasNextPage: boolean;\n        hasPreviousPage: boolean;\n    };\n    filters: {\n        game: string;\n        isRecruiting: boolean;\n        search: string;\n    };\n}\n\nexport default function ClansPage() {\n    const { user, isAuthenticated } = useAuth();\n    const [clans, setClans] = useState<Clan[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [selectedGame, setSelectedGame] = useState('all');\n    const [showRecruitingOnly, setShowRecruitingOnly] = useState(false);\n    const [sortBy, setSortBy] = useState('level');\n    const [sortOrder, setSortOrder] = useState('desc');\n    const [showCreateModal, setShowCreateModal] = useState(false);\n\n    const gameOptions = [\n        { value: 'all', label: 'T√ºm Oyunlar', icon: 'üéÆ' },\n        { value: 'Counter-Strike 2', label: 'CS2', icon: 'üî´' },\n        { value: 'Valorant', label: 'Valorant', icon: 'üéØ' },\n        { value: 'League of Legends', label: 'League of Legends', icon: '‚öîÔ∏è' },\n        { value: 'Apex Legends', label: 'Apex Legends', icon: 'üèÜ' },\n        { value: 'Overwatch 2', label: 'Overwatch 2', icon: 'üõ°Ô∏è' },\n        { value: 'Rocket League', label: 'Rocket League', icon: '‚öΩ' }\n    ];\n\n    const achievementIcons = {\n        tournament_winner: { icon: <Trophy className=\"text-yellow-500\" size={16} />, label: 'Turnuva Galibi' },\n        streak_master: { icon: <Target className=\"text-red-500\" size={16} />, label: 'Seri Ustasƒ±' },\n        elite_squad: { icon: <Crown className=\"text-purple-500\" size={16} />, label: 'Elit Takƒ±m' },\n        tactical_genius: { icon: <Shield className=\"text-blue-500\" size={16} />, label: 'Taktik Dehasƒ±' },\n        team_player: { icon: <Users className=\"text-green-500\" size={16} />, label: 'Takƒ±m Oyuncusu' },\n        growing_strong: { icon: <TrendingUp className=\"text-orange-500\" size={16} />, label: 'G√º√ßl√º B√ºy√ºme' },\n        friendly_community: { icon: <Star className=\"text-pink-500\" size={16} />, label: 'Dostane Topluluk' }\n    };\n\n    const fetchClans = async () => {\n        try {\n            setLoading(true);\n            const params = new URLSearchParams({\n                page: currentPage.toString(),\n                limit: '12',\n                sortBy,\n                sortOrder\n            });\n\n            if (searchQuery) {\n                params.append('search', searchQuery);\n            }\n\n            if (selectedGame !== 'all') {\n                params.append('game', selectedGame);\n            }\n\n            if (showRecruitingOnly) {\n                params.append('recruiting', 'true');\n            }\n\n            const response = await fetch(`/api/clans?${params}`);\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch clans');\n            }\n\n            const data: ClansResponse = await response.json();\n            setClans(data.clans);\n            setTotalPages(data.pagination.totalPages);\n            \n            console.log('‚öîÔ∏è [Clans] Loaded:', data.clans.length, 'clans');\n        } catch (error) {\n            console.error('üí• [Clans] Error fetching clans:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchClans();\n    }, [currentPage, selectedGame, showRecruitingOnly, sortBy, sortOrder]);\n\n    // Debounced search\n    useEffect(() => {\n        const debounceTimer = setTimeout(() => {\n            if (currentPage === 1) {\n                fetchClans();\n            } else {\n                setCurrentPage(1);\n            }\n        }, 500);\n\n        return () => clearTimeout(debounceTimer);\n    }, [searchQuery]);\n\n    const formatDate = (timestamp: number) => {\n        return new Date(timestamp).toLocaleDateString('tr-TR', {\n            month: 'long',\n            year: 'numeric'\n        });\n    };\n\n    const getWinRateColor = (winRate: number) => {\n        if (winRate >= 70) return 'text-green-400';\n        if (winRate >= 50) return 'text-yellow-400';\n        return 'text-red-400';\n    };\n\n    const getRankingColor = (ranking: number) => {\n        if (ranking <= 5) return 'text-yellow-400';\n        if (ranking <= 15) return 'text-blue-400';\n        return 'text-gray-400';\n    };\n\n    if (loading) {\n        return (\n            <div className=\"min-h-screen bg-[#36393f] py-8\">\n                <div className=\"container mx-auto px-4\">\n                    <div className=\"animate-pulse\">\n                        <div className=\"h-8 bg-gray-600 rounded w-1/4 mb-6\"></div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n                            {[1, 2, 3, 4, 5, 6, 7, 8].map(i => (\n                                <div key={i} className=\"bg-[#2f3136] rounded-xl p-6 border border-white/10\">\n                                    <div className=\"h-32 bg-gray-600 rounded mb-4\"></div>\n                                    <div className=\"h-6 bg-gray-600 rounded w-3/4 mb-2\"></div>\n                                    <div className=\"h-4 bg-gray-600 rounded w-1/2\"></div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"min-h-screen bg-[#36393f] py-8\">\n            <div className=\"container mx-auto px-4 max-w-7xl\">\n                {/* Header */}\n                <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-8\">\n                    <div>\n                        <h1 className=\"text-4xl font-bold text-white mb-2 flex items-center space-x-3\">\n                            <Sword className=\"text-[#5865f2]\" size={40} />\n                            <span>Klanlar</span>\n                        </h1>\n                        <p className=\"text-gray-400\">PRV10 topluluƒüunun rekabet√ßi takƒ±mlarƒ±</p>\n                    </div>\n                    \n                    {/* Create Clan Button */}\n                    {isAuthenticated && (\n                        <button \n                            onClick={() => setShowCreateModal(true)}\n                            className=\"flex items-center space-x-2 px-4 py-2 bg-[#5865f2] text-white rounded-lg hover:bg-[#4752c4] transition-colors duration-300\"\n                        >\n                            <Plus size={20} />\n                            <span>Klan Kur</span>\n                        </button>\n                    )}\n                </div>\n\n                {/* Filters */}\n                <div className=\"bg-[#2f3136] rounded-xl border border-white/10 p-6 mb-6\">\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0 lg:space-x-4\">\n                        {/* Search */}\n                        <div className=\"relative flex-1 lg:max-w-md\">\n                            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Klan ara...\"\n                                value={searchQuery}\n                                onChange={(e) => setSearchQuery(e.target.value)}\n                                className=\"w-full pl-10 pr-4 py-2 bg-[#36393f] border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-[#5865f2]\"\n                            />\n                        </div>\n\n                        {/* Filters */}\n                        <div className=\"flex flex-wrap items-center gap-4\">\n                            {/* Game Filter */}\n                            <select\n                                value={selectedGame}\n                                onChange={(e) => setSelectedGame(e.target.value)}\n                                className=\"px-3 py-2 bg-[#36393f] border border-white/20 rounded-lg text-white focus:outline-none focus:border-[#5865f2]\"\n                            >\n                                {gameOptions.map(game => (\n                                    <option key={game.value} value={game.value}>\n                                        {game.icon} {game.label}\n                                    </option>\n                                ))}\n                            </select>\n\n                            {/* Sort */}\n                            <select\n                                value={`${sortBy}-${sortOrder}`}\n                                onChange={(e) => {\n                                    const [newSortBy, newSortOrder] = e.target.value.split('-');\n                                    setSortBy(newSortBy);\n                                    setSortOrder(newSortOrder);\n                                }}\n                                className=\"px-3 py-2 bg-[#36393f] border border-white/20 rounded-lg text-white focus:outline-none focus:border-[#5865f2]\"\n                            >\n                                <option value=\"level-desc\">En Y√ºksek Level</option>\n                                <option value=\"level-asc\">En D√º≈ü√ºk Level</option>\n                                <option value=\"memberCount-desc\">En Fazla √úye</option>\n                                <option value=\"memberCount-asc\">En Az √úye</option>\n                                <option value=\"winRate-desc\">En Y√ºksek Kazanma Oranƒ±</option>\n                                <option value=\"createdAt-desc\">En Yeni</option>\n                                <option value=\"createdAt-asc\">En Eski</option>\n                            </select>\n\n                            {/* Recruiting Filter */}\n                            <label className=\"flex items-center space-x-2 cursor-pointer\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={showRecruitingOnly}\n                                    onChange={(e) => setShowRecruitingOnly(e.target.checked)}\n                                    className=\"sr-only\"\n                                />\n                                <div className={`w-5 h-5 rounded border-2 flex items-center justify-center transition-colors ${\n                                    showRecruitingOnly ? 'bg-[#5865f2] border-[#5865f2]' : 'border-gray-400'\n                                }`}>\n                                    {showRecruitingOnly && <Users className=\"text-white\" size={12} />}\n                                </div>\n                                <span className=\"text-gray-300 text-sm\">Sadece √úye Arayan</span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Clans Grid */}\n                {clans.length === 0 ? (\n                    <div className=\"bg-[#2f3136] rounded-xl border border-white/10 p-12 text-center\">\n                        <Sword className=\"mx-auto text-gray-500 mb-4\" size={48} />\n                        <h3 className=\"text-xl font-semibold text-white mb-2\">Klan Bulunamadƒ±</h3>\n                        <p className=\"text-gray-400\">\n                            {searchQuery ? 'Arama kriterlerinize uygun klan bulunamadƒ±.' : 'Hen√ºz klan bulunmuyor.'}\n                        </p>\n                        {isAuthenticated && (\n                            <button \n                                onClick={() => setShowCreateModal(true)}\n                                className=\"mt-6 px-6 py-3 bg-[#5865f2] text-white rounded-lg hover:bg-[#4752c4] transition-colors duration-300\"\n                            >\n                                ƒ∞lk Klanƒ± Sen Kur\n                            </button>\n                        )}\n                    </div>\n                ) : (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n                        {clans.map(clan => (\n                            <Link\n                                key={clan.id}\n                                href={`/clans/${clan.id}`}\n                                className=\"bg-[#2f3136] rounded-xl border border-white/10 overflow-hidden hover:border-[#5865f2]/50 transition-all duration-300 hover:scale-105 group\"\n                            >\n                                {/* Banner */}\n                                <div className=\"relative h-32 bg-gradient-to-br from-[#5865f2] to-[#4752c4] overflow-hidden\">\n                                    {clan.banner ? (\n                                        <img\n                                            src={clan.banner}\n                                            alt={clan.name}\n                                            className=\"w-full h-full object-cover\"\n                                        />\n                                    ) : (\n                                        <div className=\"w-full h-full bg-gradient-to-br from-[#5865f2] to-[#4752c4] flex items-center justify-center\">\n                                            <Sword className=\"text-white opacity-50\" size={32} />\n                                        </div>\n                                    )}\n                                    \n                                    {/* Recruiting Badge */}\n                                    {clan.isRecruiting && (\n                                        <div className=\"absolute top-2 right-2 px-2 py-1 bg-green-500 text-white text-xs rounded-full font-medium\">\n                                            √úye Arƒ±yor\n                                        </div>\n                                    )}\n                                    \n                                    {/* Logo */}\n                                    <div className=\"absolute -bottom-4 left-4 w-16 h-16 bg-[#2f3136] rounded-full border-4 border-[#2f3136] overflow-hidden\">\n                                        {clan.logo ? (\n                                            <img\n                                                src={clan.logo}\n                                                alt={clan.tag}\n                                                className=\"w-full h-full object-cover\"\n                                            />\n                                        ) : (\n                                            <div className=\"w-full h-full bg-gradient-to-br from-[#5865f2] to-[#4752c4] flex items-center justify-center text-white font-bold text-lg\">\n                                                {clan.tag.charAt(0)}\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <div className=\"p-6 pt-8\">\n                                    {/* Clan Info */}\n                                    <div className=\"mb-4\">\n                                        <div className=\"flex items-center space-x-2 mb-1\">\n                                            <h3 className=\"text-lg font-bold text-white group-hover:text-[#5865f2] transition-colors\">\n                                                {clan.name}\n                                            </h3>\n                                            <span className=\"px-2 py-1 bg-[#36393f] text-gray-400 text-xs rounded-full font-medium\">\n                                                [{clan.tag}]\n                                            </span>\n                                        </div>\n                                        <p className=\"text-sm text-gray-400 mb-2\">{clan.game}</p>\n                                        <p className=\"text-xs text-gray-500 line-clamp-2\">{clan.description}</p>\n                                    </div>\n\n                                    {/* Level & XP */}\n                                    <div className=\"mb-4\">\n                                        <div className=\"flex items-center justify-between text-sm mb-1\">\n                                            <span className=\"text-gray-400\">Level {clan.level}</span>\n                                            <span className=\"text-gray-400\">{clan.xp?.toLocaleString()} XP</span>\n                                        </div>\n                                        <div className=\"w-full bg-[#36393f] rounded-full h-2\">\n                                            <div \n                                                className=\"bg-[#5865f2] h-2 rounded-full transition-all duration-500\"\n                                                style={{ width: `${Math.min(100, (clan.xp % 1000) / 10)}%` }}\n                                            ></div>\n                                        </div>\n                                    </div>\n\n                                    {/* Stats */}\n                                    <div className=\"grid grid-cols-2 gap-4 mb-4 text-xs\">\n                                        <div className=\"text-center\">\n                                            <div className=\"text-white font-semibold\">{clan.memberCount}/{clan.maxMembers}</div>\n                                            <div className=\"text-gray-400\">√úyeler</div>\n                                        </div>\n                                        <div className=\"text-center\">\n                                            <div className={`font-semibold ${getWinRateColor(clan.stats?.winRate || 0)}`}>\n                                                {clan.stats?.winRate?.toFixed(1)}%\n                                            </div>\n                                            <div className=\"text-gray-400\">Kazanma</div>\n                                        </div>\n                                    </div>\n\n                                    {/* Achievements */}\n                                    {clan.achievements.length > 0 && (\n                                        <div className=\"flex flex-wrap gap-1 mb-4\">\n                                            {clan.achievements.slice(0, 3).map(achievement => {\n                                                const achievementData = achievementIcons[achievement as keyof typeof achievementIcons];\n                                                return achievementData ? (\n                                                    <div\n                                                        key={achievement}\n                                                        className=\"w-6 h-6 bg-[#36393f] rounded-full flex items-center justify-center\"\n                                                        title={achievementData.label}\n                                                    >\n                                                        {achievementData.icon}\n                                                    </div>\n                                                ) : null;\n                                            })}\n                                            {clan.achievements.length > 3 && (\n                                                <div className=\"w-6 h-6 bg-[#36393f] rounded-full flex items-center justify-center text-gray-400 text-xs font-bold\">\n                                                    +{clan.achievements.length - 3}\n                                                </div>\n                                            )}\n                                        </div>\n                                    )}\n\n                                    {/* Footer */}\n                                    <div className=\"flex items-center justify-between pt-4 border-t border-white/10 text-xs text-gray-400\">\n                                        <div className=\"flex items-center space-x-1\">\n                                            <Calendar size={12} />\n                                            <span>{formatDate(clan.createdAt)}</span>\n                                        </div>\n                                        {clan.stats?.ranking > 0 && (\n                                            <div className={`flex items-center space-x-1 ${getRankingColor(clan.stats.ranking)}`}>\n                                                <Trophy size={12} />\n                                                <span>#{clan.stats.ranking}</span>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </Link>\n                        ))}\n                    </div>\n                )}\n\n                {/* Pagination */}\n                {totalPages > 1 && (\n                    <div className=\"flex items-center justify-center space-x-2 mt-8\">\n                        <button\n                            onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                            disabled={currentPage === 1}\n                            className=\"px-4 py-2 bg-[#36393f] text-gray-300 rounded-lg hover:bg-[#40444b] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                        >\n                            √ñnceki\n                        </button>\n                        \n                        <div className=\"flex items-center space-x-1\">\n                            {Array.from({ length: Math.min(totalPages, 5) }, (_, i) => {\n                                let page = i + 1;\n                                if (totalPages > 5) {\n                                    const start = Math.max(1, currentPage - 2);\n                                    page = start + i;\n                                }\n                                \n                                return (\n                                    <button\n                                        key={page}\n                                        onClick={() => setCurrentPage(page)}\n                                        className={`w-10 h-10 rounded-lg font-medium transition-colors ${\n                                            currentPage === page\n                                                ? 'bg-[#5865f2] text-white'\n                                                : 'bg-[#36393f] text-gray-300 hover:bg-[#40444b]'\n                                        }`}\n                                    >\n                                        {page}\n                                    </button>\n                                );\n                            })}\n                        </div>\n\n                        <button\n                            onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                            disabled={currentPage === totalPages}\n                            className=\"px-4 py-2 bg-[#36393f] text-gray-300 rounded-lg hover:bg-[#40444b] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                        >\n                            Sonraki\n                        </button>\n                    </div>\n                )}\n\n                {/* Create Clan Modal */}\n                {showCreateModal && (\n                    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n                        <div className=\"bg-[#2f3136] rounded-xl border border-white/10 w-full max-w-md\">\n                            <div className=\"p-6\">\n                                <h2 className=\"text-2xl font-bold text-white mb-4\">Yeni Klan Kur</h2>\n                                <p className=\"text-gray-400 mb-6\">Bu √∂zellik yakƒ±nda eklenecek. ≈ûimdilik mevcut klanlarƒ± ke≈üfedin!</p>\n                                <div className=\"flex items-center space-x-3\">\n                                    <button\n                                        onClick={() => setShowCreateModal(false)}\n                                        className=\"flex-1 px-4 py-2 bg-[#36393f] text-gray-300 rounded-lg hover:bg-[#40444b] transition-colors\"\n                                    >\n                                        Kapat\n                                    </button>\n                                    <Link\n                                        href=\"/clans\"\n                                        onClick={() => setShowCreateModal(false)}\n                                        className=\"flex-1 px-4 py-2 bg-[#5865f2] text-white rounded-lg hover:bg-[#4752c4] transition-colors text-center\"\n                                    >\n                                        Klanlarƒ± Ke≈üfet\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}